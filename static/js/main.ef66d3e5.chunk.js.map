{"version":3,"sources":["components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","charDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredYearExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onStopEditing","NewEXpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef66d3e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\n\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n  console.log(barFillHeight);\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map(dataPoint => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n  const charDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    charDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={charDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredYearExpenses = props.items.filter(\r\n    expense => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className='expenses'>\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredYearExpenses} />\r\n      <ExpensesList items={filteredYearExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: '',\r\n  //   });\r\n\r\n  //   const titleChangeHandler = event => {\r\n  //     setUserInput(prevState => {\r\n  //       return { ...prevState, enteredTitle: event.target.value };\r\n  //     });\r\n  //   };\r\n  //   const amountChangeHandler = event => {\r\n  //     setUserInput({\r\n  //       ...userInput,\r\n  //       enteredAmount: event.target.value,\r\n  //     });\r\n  //   };\r\n  //   const dateChangeHandler = event => {\r\n  //     setUserInput({\r\n  //       ...userInput,\r\n  //       enteredDate: event.target.value,\r\n  //     });\r\n  //   };\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const titleChangeHandler = event => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const amountChangeHandler = event => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  const dateChangeHandler = event => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  const cancleEditing = () => {\r\n    props.onStopEditing();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={cancleEditing}>\r\n          Cancle\r\n        </button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewEXpense = props => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = enteredExpenseData => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onStopEditing={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewEXpense;\r\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSE = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}